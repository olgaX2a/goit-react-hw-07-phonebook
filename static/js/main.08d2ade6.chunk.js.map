{"version":3,"sources":["redux/phonebook/phonebookApi.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","redux/phonebook/phonebook-selectors.js","helpers/filterContacts.js","components/ContactList/ContactList.jsx","redux/phonebook/filterReducer.js","components/Filter/Filter.jsx","App.js","redux/store.js","index.js"],"names":["phonebookApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getContacts","query","providesTags","addContact","mutation","contact","url","method","body","invalidatesTags","deleteContact","contactId","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","ContactForm","data","useState","name","setName","number","setNumber","handleChangeUserInfo","event","target","value","trim","className","onSubmit","preventDefault","id","uuidv4","normalizedName","toLowerCase","map","el","find","isInContactList","alert","onChange","type","pattern","title","required","PhonebookListItem","onClick","getFilter","state","filterReducer","filterContacts","contacts","filter","normalizedFilter","includes","ContactList","useSelector","filterContact","createAction","createReducer","_","payload","Filter","dispatch","useDispatch","filterValue","App","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08d2ade6.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const phonebookApi = createApi({\r\n  reducerPath: 'phonebookApi',\r\n  tagTypes: ['contacts'],\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:4040' }),\r\n  endpoints: (builder) => ({\r\n    getContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: ['contacts'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: (contact) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: { ...contact },\r\n      }),\r\n      invalidatesTags: ['contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['contacts'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = phonebookApi\r\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./ContactForm.css\";\nimport { useGetContactsQuery } from \"../../redux/phonebook/phonebookApi\";\nimport { useAddContactMutation } from \"../../redux/phonebook/phonebookApi\";\n\nfunction ContactForm() {\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChangeUserInfo = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value.trim());\n        break;\n\n      case \"number\":\n        setNumber(value.trim());\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const isInContactList = (contact) => {\n    const normalizedName = contact.name.toLowerCase();\n    const names = data.map((el) => el.name.toLowerCase());\n    const existingName = names.find((name) => name === normalizedName);\n    return existingName;\n  };\n\n  const handleUserFormSubmit = (event) => {\n    event.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    if (!isInContactList(contact)) {\n      addContact(contact);\n      resetForm();\n    } else {\n      return alert(\"This contact is already in contact list!\");\n    }\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleUserFormSubmit}>\n      <label className=\"Form__label\">\n        Name\n        <input\n          onChange={handleChangeUserInfo}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className=\"Form__label\">\n        Number\n        <input\n          onChange={handleChangeUserInfo}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"Form__add-btn\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import \"./ContactList.css\";\nimport { useDeleteContactMutation } from \"../../redux/phonebook/phonebookApi\";\n\nconst PhonebookListItem = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <li className=\"Contact__item\">\n      <p className=\"Contact__info\">{name}: </p>\n      <p className=\"Contact__info\">{number}</p>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => deleteContact(id)}\n        className=\"Contact__delete-btn\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default PhonebookListItem;\n","export const getContacts = (state) => state.contacts\n\nexport const getFilter = (state) => state.filterReducer\n","export const filterContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase().trim();\n  return contacts.filter((contact) => {\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n};\n","import PhonebookListItem from \"./ContactListItem\";\nimport \"./ContactList.css\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\nimport { filterContacts } from \"../../helpers/filterContacts\";\nimport { useGetContactsQuery } from \"../../redux/phonebook/phonebookApi\";\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n\n  const { data } = useGetContactsQuery();\n\n  return (\n    <ul className=\"Contact__list\">\n      {data &&\n        filterContacts(data, filter).map(({ name, number, id }) => {\n          return (\n            <PhonebookListItem key={id} name={name} number={number} id={id} />\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { createReducer, createAction } from '@reduxjs/toolkit'\r\n\r\nexport const filterContact = createAction('phonebook/filterContacts')\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n})\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/phonebook/phonebook-selectors\";\nimport { filterContact } from \"../../redux/phonebook/filterReducer\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  const onFilterChange = (event) => {\n    dispatch(filterContact(event.target.value));\n  };\n  return (\n    <>\n      <label className=\"Filter\">\n        <p>Find contacts by name:</p>\n        <input\n          name=\"filter\"\n          type=\"text\"\n          onChange={onFilterChange}\n          value={filterValue}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import './App.css'\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\n\nfunction App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  )\n}\n\nexport default App\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { setupListeners } from '@reduxjs/toolkit/query'\r\n\r\nimport { phonebookApi } from './phonebook/phonebookApi'\r\nimport { filterReducer } from './phonebook/filterReducer'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [phonebookApi.reducerPath]: phonebookApi.reducer,\r\n    filterReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    phonebookApi.middleware,\r\n  ],\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}